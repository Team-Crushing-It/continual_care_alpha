workflows:
  # android-workflow:
  #   name: Android Workflow
  #   max_build_duration: 120
  #   environment:
  #     groups:
  #       # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
  #       - keystore_credentials # <-- (Includes CM_KEYSTORE, CM_KEYSTORE_PASSWORD, CM_KEY_PASSWORD, CM_KEY_ALIAS)
  #         # CM_KEYSTORE <-- Put your keystore file here
  #         # CM_KEYSTORE_PASSWORD <-- Put your keystore password here
  #         # CM_KEY_PASSWORD <-- Put your keystore alias password here
  #         # CM_KEY_ALIAS <-- Put your keystore alias username here
  #       - google_play # <-- (Includes GCLOUD_SERVICE_ACCOUNT_CREDENTIALS - Put your google-services.json here)
  #       - other
  #     vars:
  #       CM_KEYSTORE_PATH: /tmp/keystore.keystore
  #       PACKAGE_NAME: "io.codemagic.flutteryaml" # <-- Put your package name here
  #       GOOGLE_PLAY_TRACK: "alpha" # <-- This must be "alpha" or above.
  #     flutter: stable
  #     xcode: latest
  #     cocoapods: default
  #   scripts:
  #     - name: Set up key properties
  #       script: |
  #         echo $CM_KEYSTORE | base64 --decode > $CM_KEYSTORE_PATH
  #         # The following script creates key.properties file and stores the credentials in it. As we configure code signing in app/build.gradle file, the following part is unnecessary unless code signing is configured differently as explained in the documentation: https://docs.codemagic.io/flutter-code-signing/android-code-signing/
  #         # cat >> "$CM_BUILD_DIR/android/key.properties" <<EOF
  #         # storePassword=$CM_KEYSTORE_PASSWORD
  #         # keyPassword=$CM_KEY_PASSWORD
  #         # keyAlias=$CM_KEY_ALIAS
  #         # storeFile=$CM_KEYSTORE_PATH
  #         # EOF
  #     - name: Set up local.properties
  #       script: |
  #         echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
  #     - name: Get Flutter packages
  #       script: |
  #         flutter packages pub get
  #     - name: Flutter analyze
  #       script: |
  #         flutter analyze
  #     - name: Flutter unit tests
  #       script: |
  #         flutter test
  #       ignore_failure: true
  #     - name: Build AAB with Flutter
  #       script: |
  #         flutter build appbundle --release --build-name=1.0.0 --build-number=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))
  #   artifacts:
  #     - build/**/outputs/**/*.aab
  #     - build/**/outputs/**/mapping.txt
  #     - flutter_drive.log
  #   publishing:
  #     # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
  #     email:
  #       recipients:
  #         - user_1@example.com
  #         - user_2@example.com
  #       notify:
  #         success: true # To not receive a notification when a build succeeds
  #         failure: false # To not receive a notification when a build fails
  #     slack:
  #       # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
  #       channel: "#builds"
  #       notify_on_build_start: true # To receive a notification when a build starts
  #       notify:
  #         success: true # To not receive a notification when a build succeeds
  #         failure: false # To not receive a notification when a build fails
  #     google_play:
  #       credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
  #       track: $GOOGLE_PLAY_TRACK
  #       in_app_update_priority: 0
  ios-workflow:
    name: iOS Workflow
    # instance_type: mac_mini
    max_build_duration: 120
    environment:
      groups:
        # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
        - app_store_credentials # <-- (Includes APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY)
          # APP_STORE_CONNECT_ISSUER_ID <-- Put your App Store Connect Issuer Id here
          # APP_STORE_CONNECT_KEY_IDENTIFIER <-- Put your App Store Connect Key Identifier here
          # APP_STORE_CONNECT_PRIVATE_KEY <-- Put your App Store Connect Private Key here
        - certificate_credentials # <-- (Includes CERTIFICATE_PRIVATE_KEY - Put your Certificate Private Key here)
        - other
      vars:
        XCODE_WORKSPACE: "Runner.xcworkspace"
        XCODE_SCHEME: "Runner"
        BUNDLE_ID: "io.codemagic.flutteryaml" # <-- Put your bundle id here
        APP_STORE_ID: 6444452860 # <-- Use the TestFlight Apple id number (An automatically generated ID assigned to your app) found under General > App Information > Apple ID.
        APP_STORE_CONNECT_ISSUER_ID: 4NAJK9C935 # <-- Put your encrypted App Store Connect Issuer ID here 
        APP_STORE_CONNECT_PRIVATE_KEY: MIGTAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBHkwdwIBAQQgIIQQDwEMlnsKkdlnmi/rL4DwWjZp+wWcQflF5N60x9agCgYIKoZIzj0DAQehRANCAAQxelLR9KWR5oPFv+4GOaWuFQYNFxnW+1l+YCIUNm5T05I5zb6FS7OmUejx4CyrLfrszo1Df2pL527PRlL3ie1G # <-- Put your encrypted App Store Connect Key Identifier here 
        APP_STORE_CONNECT_KEY_IDENTIFIER: 718e4923-b8c1-4ba3-9dbc-1286533b977b # <-- Put your encrypted App Store Connect Private Key here 
        CERTIFICATE_PRIVATE_KEY: MIIEpAIBAAKCAQEAuPqsWFEF2JXvk5brRMXSA7LeDp0pM22GLPyNXk2f49oC69vO76L2cBPROxyruF+gBxoE1Pw0/jk/SN5rWJkHkFD/fKDJjXuGjew5JeQIYx7437RhP78yEotIzLolhRqQ3Dl280RvFfEAyJPbrM+Fplqu8MgRz1pWkx+6EYYDLmJjubepElN8zoqqJ0KbVvyJI47gxoomlOW8oEel0/sw7xFFTHxjzCXCKOEXZjFaRKgLrS9mlmLR+PnqeunKbDxRcJvzulwhPKOswDqZDeRVuHMuCZN1JcnpNZaZSg5Dtw/bm2YLJGdTwFmpBhz46aUAI3Vlomd443sXhzZST2HGfQIDAQABAoIBAGXurJ4WN9R7+wMnfQnuwKYNINSIwjV2uyN7ICPBPsR+VHHINKZU9NwZ74hVakM1XqfLLLJ5MHKO9VKgTiMKYOKj38W7jJWMZj861tsMZ5rHbHlJmvVX1K3nVvyJ7zcDxqO0ftna8iPzJG1jHQCDcrCS9Cf29+l9bIuyRgR2Bra9y6QZpxThQI0SEJwoIlPUb6KXTCXyoeBJsaxQV5dnlZloQHDem1r33j7xs+EnJXcds4wqb2+Qzqcw2BBmYSS5E5OU9RjsyVcnw7eg7CdoaNfFNdthTUjlHspGRTX7T5Ujly43hSmyQYqt3uEr5p5K+NTzDNMEVBcYmnuuy2Hhg7kCgYEA9IJTgjiysLFYIlVQk5SNLMNyDqj48Ta+jLtQS5NTat1y6Bp3IJhU9/UfNnrkof8gB38f6jso2KCR9W69TAeQdX4m5Z6fRg9cjl9Ju7rcTO7QOBmG3M35Gw3rluMjFXjRhLU6t4xZKPobSUqcQKChWsn3Cgwik7hFmbpBWwByKkMCgYEAwawlggjvfEsdBps613UmI4RfH3VKfkLWHxR9D0GccFwfHAOnPKQtKSRY0Zn/5xVR9Bbv+O65xFJ4Jyt1w/B8j71Cl9spK0d4PKbNXbY9hgsFozV0A5Q1S+I/kCUpGJr4Fqm58M/Y5ONBLydNOrN5hbwVY/N9tccu2GClsWxrID8CgYEAu2S3A/LYYLtKxOWGH9WWbVxNqhau1JAUcl+NJp7/K8QVMPY3nu+hD3j6NxLw74dM0PIJT8ePgpdtxiDdS8vwV1wcC5gKkfNsCGHXbN3FweC2DIjj546lAKsmiDoExYwXaBJNsicKnnExQHbCUnXJtH9dqoGqbnSoQy2QsWIiHWkCgYEAqZ4P13vl6nCKgj+vYAW8mjyTZqS90ijNCLlT8emfjhRQNqPIcubCmpa3pxJ9ua/Fb8Yq81R4o8Uqb/uzDyDupqC10vNhcgMM/emEUP+LkHrUvCTTb1L8/nGvA5pYDLGkd4y8SXhvV77kVtzP2YpX8tVP0pLs1SgWEfFLDEGM7NcCgYAAsN6jV0Ui5Neod9bklZ7BmGGgSXdL9BgoP10xZNmvXkPwLLFKQzN3WgColN/uuu0tK1Dc2x5OL0YBKElYedySlRNRP0/Qve2zQg7VL4J/KGCVZ2hyol/FUchETIuoAOV1UAGZTv93s/hOEjib65E3xAMimnboHi9yOQRcTd99zQ== # <-- Put your encrypted Certificate Private Key here 
      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
          keychain initialize
      - name: Fetch signing files
        script: |
          app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_STORE --create
      - name: Use system default keychain
        script: |
          keychain add-certificates
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Flutter analyze
        script: |
          flutter analyze
      - name: Flutter unit tests
        script: |
          flutter test
        ignore_failure: true
      - name: Install pods
        script: |
          find . -name "Podfile" -execdir pod install \;
      - name: Flutter build ipa and automatic versioning
        script: |
          flutter build ipa --release \
          --build-name=1.0.0 \
          --build-number=$(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_ID") + 1)) \
          --export-options-plist=/Users/builder/export_options.plist
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    publishing:
      # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
      email:
        recipients:
          - user_1@example.com
          - user_2@example.com
        notify:
          success: true # To receive a notification when a build succeeds
          failure: false # To not receive a notification when a build fails
      slack:
        # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
        channel: "#builds"
        notify_on_build_start: true # To receive a notification when a build starts
        notify:
          success: true # To receive a notification when a build succeeds
          failure: false # To not receive a notification when a build fails
      app_store_connect: # https://docs.codemagic.io/publishing-yaml/distribution
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY # Contents of the API key, can also reference environment variable such as $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER # Alphanumeric value that identifies the API key, can also reference environment variable such as $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID # Alphanumeric value that identifies who created the API key, can also reference environment variable such as $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: false # Optional boolean, defaults to false. Whether or not to submit the uploaded build to TestFlight beta review. Required for distributing to beta groups. Note: This action is performed during post-processing.
        # beta_groups:                                  # Specify the names of beta tester groups that will get access to the build once it has passed beta review.
        #      - group name 1
        #      - group name 2